plugins {
	id 'org.springframework.boot' version '2.3.3.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id "org.sonarqube" version "3.0"
	id 'info.solidsoft.pitest' version '1.5.1'
	id 'jacoco'
	id 'war'
}

group = 'com.app'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

sonarqube {
	properties {
		property "sonar.projectKey", "apitest"
		property "sonar.organization", "pedrohubner"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.coverage.jacoco.xmlReportPaths", "$buildDir/reports/jacoco/test/jacocoTestReport.xml"
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation('junit:junit:4.13')
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation('org.mock-server:mockserver-netty:5.11.1')
	testImplementation('org.mock-server:mockserver-client-java:5.11.1')
}

jacocoTestReport {
	dependsOn(test)
	reports {
		xml.enabled(true)
		csv.enabled(false)
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			element('CLASS')
			limit {
				minimum = 0.3
				value = 'COVEREDRATIO'
				counter = 'LINE'
			}
		}
	}
}

//check.dependsOn jacocoTestCoverageVerification

test {
	useJUnitPlatform()
	finalizedBy(jacocoTestReport)
}
